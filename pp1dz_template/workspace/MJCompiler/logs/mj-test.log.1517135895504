INFO  11:37:48,377 - Compiling source file: C:\Users\mimar\Desktop\pp1dz_template\workspace\MJCompiler\test\program.obj
INFO  11:37:48,423 - #2 program
INFO  11:37:48,423 - #43 P
INFO  11:37:48,423 - #15 const
INFO  11:37:48,425 - #43 int
INFO  11:37:48,425 - #43 size
INFO  11:37:48,425 - #29 =
INFO  11:37:48,426 - #42 10
INFO  11:37:48,426 - #32 ;
INFO  11:37:48,426 - #4 class
INFO  11:37:48,427 - #43 Table
INFO  11:37:48,427 - #39 {
INFO  11:37:48,428 - #43 int
INFO  11:37:48,428 - #43 pos
INFO  11:37:48,428 - #37 [
INFO  11:37:48,428 - #38 ]
INFO  11:37:48,428 - #33 ,
INFO  11:37:48,429 - #43 neg
INFO  11:37:48,429 - #37 [
INFO  11:37:48,429 - #38 ]
INFO  11:37:48,429 - #32 ;
INFO  11:37:48,431 - #39 {
INFO  11:37:48,432 - #10 void
INFO  11:37:48,434 - #43 putp
INFO  11:37:48,435 - #35 (
INFO  11:37:48,435 - #43 int
INFO  11:37:48,435 - #43 a
INFO  11:37:48,435 - #33 ,
INFO  11:37:48,435 - #43 int
INFO  11:37:48,435 - #43 idx
INFO  11:37:48,435 - #36 )
INFO  11:37:48,436 - #39 {
INFO  11:37:48,436 - #43 this
INFO  11:37:48,438 - #34 .
INFO  11:37:48,439 - #43 pos
INFO  11:37:48,439 - #37 [
INFO  11:37:48,439 - #43 idx
INFO  11:37:48,439 - #38 ]
INFO  11:37:48,439 - #29 =
INFO  11:37:48,439 - #43 a
INFO  11:37:48,439 - #32 ;
INFO  11:37:48,439 - #40 }
INFO  11:37:48,439 - #10 void
INFO  11:37:48,440 - #43 putn
INFO  11:37:48,440 - #35 (
INFO  11:37:48,440 - #43 int
INFO  11:37:48,441 - #43 a
INFO  11:37:48,441 - #33 ,
INFO  11:37:48,441 - #43 int
INFO  11:37:48,441 - #43 idx
INFO  11:37:48,441 - #36 )
INFO  11:37:48,441 - #39 {
INFO  11:37:48,441 - #43 this
INFO  11:37:48,442 - #34 .
INFO  11:37:48,442 - #43 neg
INFO  11:37:48,442 - #37 [
INFO  11:37:48,442 - #43 idx
INFO  11:37:48,442 - #38 ]
INFO  11:37:48,442 - #29 =
INFO  11:37:48,442 - #43 a
INFO  11:37:48,442 - #32 ;
INFO  11:37:48,442 - #40 }
INFO  11:37:48,442 - #43 int
INFO  11:37:48,442 - #43 getp
INFO  11:37:48,442 - #35 (
INFO  11:37:48,442 - #43 int
INFO  11:37:48,442 - #43 idx
INFO  11:37:48,442 - #36 )
INFO  11:37:48,442 - #39 {
INFO  11:37:48,442 - #9 return
INFO  11:37:48,443 - #43 pos
INFO  11:37:48,443 - #37 [
INFO  11:37:48,443 - #43 idx
INFO  11:37:48,443 - #38 ]
INFO  11:37:48,443 - #32 ;
INFO  11:37:48,443 - #40 }
INFO  11:37:48,443 - #43 int
INFO  11:37:48,443 - #43 getn
INFO  11:37:48,443 - #35 (
INFO  11:37:48,443 - #43 int
INFO  11:37:48,443 - #43 idx
INFO  11:37:48,443 - #36 )
INFO  11:37:48,443 - #39 {
INFO  11:37:48,443 - #9 return
INFO  11:37:48,443 - #43 neg
INFO  11:37:48,443 - #37 [
INFO  11:37:48,443 - #43 idx
INFO  11:37:48,443 - #38 ]
INFO  11:37:48,443 - #32 ;
INFO  11:37:48,443 - #40 }
INFO  11:37:48,443 - #40 }
INFO  11:37:48,443 - #40 }
INFO  11:37:48,444 - #43 Table
INFO  11:37:48,445 - #43 val
INFO  11:37:48,445 - #32 ;
INFO  11:37:48,445 - #39 {
INFO  11:37:48,445 - #10 void
INFO  11:37:48,445 - #43 main
INFO  11:37:48,445 - #35 (
INFO  11:37:48,445 - #36 )
INFO  11:37:48,447 - #43 int
INFO  11:37:48,447 - #43 x
INFO  11:37:48,447 - #33 ,
INFO  11:37:48,447 - #43 i
INFO  11:37:48,447 - #32 ;
INFO  11:37:48,447 - #39 {
INFO  11:37:48,447 - #43 val
INFO  11:37:48,447 - #29 =
INFO  11:37:48,447 - #6 new
INFO  11:37:48,447 - #43 Table
INFO  11:37:48,447 - #32 ;
INFO  11:37:48,448 - #43 val
INFO  11:37:48,448 - #34 .
INFO  11:37:48,448 - #43 pos
INFO  11:37:48,448 - #29 =
INFO  11:37:48,448 - #6 new
INFO  11:37:48,448 - #43 int
INFO  11:37:48,448 - #37 [
INFO  11:37:48,448 - #43 size
INFO  11:37:48,448 - #38 ]
INFO  11:37:48,448 - #32 ;
INFO  11:37:48,448 - #43 val
INFO  11:37:48,448 - #34 .
INFO  11:37:48,448 - #43 neg
INFO  11:37:48,448 - #29 =
INFO  11:37:48,448 - #6 new
INFO  11:37:48,450 - #43 int
INFO  11:37:48,450 - #37 [
INFO  11:37:48,450 - #43 size
INFO  11:37:48,450 - #38 ]
INFO  11:37:48,450 - #32 ;
INFO  11:37:48,450 - #43 i
INFO  11:37:48,450 - #29 =
INFO  11:37:48,450 - #42 0
INFO  11:37:48,450 - #32 ;
INFO  11:37:48,450 - #11 do
INFO  11:37:48,451 - #39 {
INFO  11:37:48,451 - #43 val
INFO  11:37:48,451 - #34 .
INFO  11:37:48,465 - #43 putp
INFO  11:37:48,466 - #35 (
INFO  11:37:48,466 - #42 0
INFO  11:37:48,466 - #33 ,
INFO  11:37:48,466 - #43 i
INFO  11:37:48,466 - #36 )
INFO  11:37:48,467 - #32 ;
INFO  11:37:48,467 - #43 val
INFO  11:37:48,467 - #34 .
INFO  11:37:48,467 - #43 putn
INFO  11:37:48,467 - #35 (
INFO  11:37:48,467 - #42 0
INFO  11:37:48,467 - #33 ,
INFO  11:37:48,467 - #43 i
INFO  11:37:48,467 - #36 )
INFO  11:37:48,467 - #32 ;
INFO  11:37:48,468 - #43 i
INFO  11:37:48,468 - #30 ++
INFO  11:37:48,468 - #32 ;
INFO  11:37:48,468 - #40 }
INFO  11:37:48,468 - #12 while
INFO  11:37:48,468 - #35 (
INFO  11:37:48,468 - #43 i
INFO  11:37:48,468 - #25 <
INFO  11:37:48,468 - #43 size
INFO  11:37:48,469 - #36 )
INFO  11:37:48,469 - #32 ;
INFO  11:37:48,469 - #8 read
INFO  11:37:48,469 - #35 (
INFO  11:37:48,469 - #43 x
INFO  11:37:48,469 - #36 )
INFO  11:37:48,469 - #32 ;
INFO  11:37:48,469 - #11 do
INFO  11:37:48,469 - #39 {
INFO  11:37:48,469 - #5 if
INFO  11:37:48,471 - #35 (
INFO  11:37:48,471 - #43 x
INFO  11:37:48,471 - #24 >=
INFO  11:37:48,471 - #43 size
INFO  11:37:48,472 - #36 )
INFO  11:37:48,472 - #3 break
INFO  11:37:48,474 - #32 ;
INFO  11:37:48,474 - #5 if
INFO  11:37:48,474 - #35 (
INFO  11:37:48,474 - #42 0
INFO  11:37:48,474 - #26 <=
INFO  11:37:48,474 - #43 x
INFO  11:37:48,475 - #27 &&
INFO  11:37:48,475 - #43 x
INFO  11:37:48,475 - #25 <
INFO  11:37:48,475 - #43 size
INFO  11:37:48,476 - #36 )
INFO  11:37:48,476 - #39 {
INFO  11:37:48,476 - #43 val
INFO  11:37:48,476 - #34 .
INFO  11:37:48,476 - #43 putp
INFO  11:37:48,476 - #35 (
INFO  11:37:48,476 - #43 val
INFO  11:37:48,476 - #34 .
INFO  11:37:48,476 - #43 getp
INFO  11:37:48,478 - #35 (
INFO  11:37:48,478 - #43 x
INFO  11:37:48,478 - #36 )
INFO  11:37:48,478 - #16 +
INFO  11:37:48,478 - #42 1
INFO  11:37:48,479 - #36 )
INFO  11:37:48,479 - #32 ;
INFO  11:37:48,479 - #40 }
INFO  11:37:48,479 - #41 else
INFO  11:37:48,479 - #5 if
INFO  11:37:48,479 - #35 (
INFO  11:37:48,479 - #43 size
INFO  11:37:48,479 - #25 <
INFO  11:37:48,479 - #43 x
INFO  11:37:48,479 - #27 &&
INFO  11:37:48,479 - #43 x
INFO  11:37:48,480 - #25 <
INFO  11:37:48,480 - #42 0
INFO  11:37:48,480 - #36 )
INFO  11:37:48,480 - #39 {
INFO  11:37:48,480 - #43 val
INFO  11:37:48,480 - #34 .
INFO  11:37:48,480 - #43 putn
INFO  11:37:48,480 - #35 (
INFO  11:37:48,480 - #43 val
INFO  11:37:48,480 - #34 .
INFO  11:37:48,480 - #43 getn
INFO  11:37:48,480 - #35 (
INFO  11:37:48,480 - #17 -
INFO  11:37:48,480 - #43 x
INFO  11:37:48,480 - #36 )
INFO  11:37:48,480 - #16 +
INFO  11:37:48,480 - #42 1
INFO  11:37:48,480 - #36 )
INFO  11:37:48,480 - #32 ;
INFO  11:37:48,480 - #40 }
INFO  11:37:48,480 - #8 read
INFO  11:37:48,481 - #35 (
INFO  11:37:48,481 - #43 x
INFO  11:37:48,481 - #36 )
INFO  11:37:48,481 - #32 ;
INFO  11:37:48,481 - #40 }
INFO  11:37:48,481 - #12 while
INFO  11:37:48,481 - #35 (
INFO  11:37:48,481 - #44 true
INFO  11:37:48,481 - #36 )
INFO  11:37:48,481 - #32 ;
INFO  11:37:48,481 - #40 }
INFO  11:37:48,481 - #40 }

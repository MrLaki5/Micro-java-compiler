INFO  01:59:02,042 - Compiling source file: C:\Users\mimar\Desktop\PP1 PROJEKAT\microjava-program-interpreter\pp1dz_template\workspace\MJCompiler\test\semantikTest2.mj
INFO  01:59:02,167 - #2 program
INFO  01:59:02,167 - #43 P
INFO  01:59:02,167 - #15 const
INFO  01:59:02,167 - #43 int
INFO  01:59:02,167 - #43 size
INFO  01:59:02,167 - #29 =
INFO  01:59:02,167 - #42 10
INFO  01:59:02,167 - #32 ;
INFO  01:59:02,183 - #4 class
INFO  01:59:02,183 - #43 Table
INFO  01:59:02,183 - #39 {
INFO  01:59:02,183 - #43 int
INFO  01:59:02,183 - #43 pos
INFO  01:59:02,183 - #37 [
INFO  01:59:02,183 - #38 ]
INFO  01:59:02,183 - #33 ,
INFO  01:59:02,183 - #43 neg
INFO  01:59:02,183 - #37 [
INFO  01:59:02,183 - #38 ]
INFO  01:59:02,183 - #32 ;
INFO  01:59:02,183 - #39 {
INFO  01:59:02,183 - #10 void
INFO  01:59:02,183 - #43 putp
INFO  01:59:02,183 - #35 (
INFO  01:59:02,183 - #43 int
INFO  01:59:02,183 - #43 a
INFO  01:59:02,183 - #33 ,
INFO  01:59:02,183 - #43 int
INFO  01:59:02,183 - #43 idx
INFO  01:59:02,183 - #36 )
INFO  01:59:02,183 - #39 {
INFO  01:59:02,183 - #43 this
INFO  01:59:02,183 - #34 .
INFO  01:59:02,183 - #43 pos
INFO  01:59:02,183 - #37 [
INFO  01:59:02,183 - #43 idx
INFO  01:59:02,183 - #38 ]
INFO  01:59:02,183 - #29 =
INFO  01:59:02,183 - #43 a
INFO  01:59:02,183 - #32 ;
INFO  01:59:02,183 - #40 }
INFO  01:59:02,183 - #10 void
INFO  01:59:02,183 - #43 putn
INFO  01:59:02,183 - #35 (
INFO  01:59:02,183 - #43 int
INFO  01:59:02,183 - #43 a
INFO  01:59:02,183 - #33 ,
INFO  01:59:02,183 - #43 int
INFO  01:59:02,183 - #43 idx
INFO  01:59:02,183 - #36 )
INFO  01:59:02,183 - #39 {
INFO  01:59:02,183 - #43 this
INFO  01:59:02,183 - #34 .
INFO  01:59:02,183 - #43 neg
INFO  01:59:02,183 - #37 [
INFO  01:59:02,183 - #43 idx
INFO  01:59:02,183 - #38 ]
INFO  01:59:02,183 - #29 =
INFO  01:59:02,183 - #43 a
INFO  01:59:02,183 - #32 ;
INFO  01:59:02,183 - #40 }
INFO  01:59:02,183 - #43 int
INFO  01:59:02,183 - #43 getp
INFO  01:59:02,183 - #35 (
INFO  01:59:02,183 - #43 int
INFO  01:59:02,183 - #43 idx
INFO  01:59:02,183 - #36 )
INFO  01:59:02,183 - #39 {
INFO  01:59:02,183 - #9 return
INFO  01:59:02,183 - #43 pos
INFO  01:59:02,183 - #37 [
INFO  01:59:02,183 - #43 idx
INFO  01:59:02,183 - #38 ]
INFO  01:59:02,183 - #32 ;
INFO  01:59:02,183 - #40 }
INFO  01:59:02,183 - #43 int
INFO  01:59:02,183 - #43 getn
INFO  01:59:02,183 - #35 (
INFO  01:59:02,183 - #43 int
INFO  01:59:02,183 - #43 idx
INFO  01:59:02,183 - #36 )
INFO  01:59:02,183 - #39 {
INFO  01:59:02,183 - #9 return
INFO  01:59:02,183 - #43 neg
INFO  01:59:02,183 - #37 [
INFO  01:59:02,183 - #43 idx
INFO  01:59:02,183 - #38 ]
INFO  01:59:02,183 - #32 ;
INFO  01:59:02,183 - #40 }
INFO  01:59:02,183 - #40 }
INFO  01:59:02,183 - #40 }
INFO  01:59:02,183 - #43 Table
INFO  01:59:02,183 - #43 val
INFO  01:59:02,183 - #32 ;
INFO  01:59:02,183 - #39 {
INFO  01:59:02,183 - #10 void
INFO  01:59:02,183 - #43 main
INFO  01:59:02,183 - #35 (
INFO  01:59:02,183 - #36 )
INFO  01:59:02,183 - #43 int
INFO  01:59:02,198 - #43 x
INFO  01:59:02,198 - #33 ,
INFO  01:59:02,198 - #43 i
INFO  01:59:02,198 - #32 ;
INFO  01:59:02,198 - #39 {
INFO  01:59:02,198 - #43 val
INFO  01:59:02,198 - #29 =
INFO  01:59:02,198 - #6 new
INFO  01:59:02,198 - #43 Table
INFO  01:59:02,198 - #32 ;
INFO  01:59:02,198 - #43 val
INFO  01:59:02,198 - #34 .
INFO  01:59:02,198 - #43 pos
INFO  01:59:02,198 - #29 =
INFO  01:59:02,198 - #6 new
INFO  01:59:02,198 - #43 int
INFO  01:59:02,198 - #37 [
INFO  01:59:02,198 - #43 size
INFO  01:59:02,198 - #38 ]
INFO  01:59:02,198 - #32 ;
INFO  01:59:02,198 - #43 val
INFO  01:59:02,198 - #34 .
INFO  01:59:02,198 - #43 neg
INFO  01:59:02,198 - #29 =
INFO  01:59:02,198 - #6 new
INFO  01:59:02,198 - #43 int
INFO  01:59:02,198 - #37 [
INFO  01:59:02,198 - #43 size
INFO  01:59:02,198 - #38 ]
INFO  01:59:02,198 - #32 ;
INFO  01:59:02,198 - #43 i
INFO  01:59:02,198 - #29 =
INFO  01:59:02,198 - #42 0
INFO  01:59:02,198 - #32 ;
INFO  01:59:02,198 - #11 do
INFO  01:59:02,198 - #39 {
INFO  01:59:02,198 - #43 val
INFO  01:59:04,714 - #34 .
INFO  01:59:04,714 - #43 putp
INFO  01:59:04,714 - #35 (
INFO  01:59:04,714 - #42 0
INFO  01:59:04,714 - #33 ,
INFO  01:59:04,714 - #43 i
INFO  01:59:04,714 - #36 )
INFO  01:59:04,714 - #32 ;
INFO  01:59:04,714 - #43 val
INFO  01:59:04,714 - #34 .
INFO  01:59:04,714 - #43 putn
INFO  01:59:04,714 - #35 (
INFO  01:59:04,714 - #42 0
INFO  01:59:04,714 - #33 ,
INFO  01:59:04,714 - #43 i
INFO  01:59:04,714 - #36 )
INFO  01:59:04,714 - #32 ;
INFO  01:59:04,714 - #43 i
INFO  01:59:04,714 - #30 ++
INFO  01:59:04,714 - #32 ;
INFO  01:59:04,714 - #40 }
INFO  01:59:04,714 - #12 while
INFO  01:59:04,714 - #35 (
INFO  01:59:04,714 - #43 i
INFO  01:59:04,714 - #25 <
INFO  01:59:04,714 - #43 size
INFO  01:59:04,714 - #36 )
INFO  01:59:04,714 - #32 ;
INFO  01:59:04,714 - #8 read
INFO  01:59:04,714 - #35 (
INFO  01:59:04,714 - #43 x
INFO  01:59:04,714 - #36 )
INFO  01:59:04,714 - #32 ;
INFO  01:59:04,714 - #11 do
INFO  01:59:04,714 - #39 {
INFO  01:59:04,714 - #5 if
INFO  01:59:04,714 - #35 (
INFO  01:59:04,714 - #43 x
INFO  01:59:04,714 - #24 >=
INFO  01:59:04,714 - #43 size
INFO  01:59:04,714 - #36 )
INFO  01:59:04,714 - #3 break
INFO  01:59:04,730 - #32 ;
INFO  01:59:04,730 - #5 if
INFO  01:59:04,730 - #35 (
INFO  01:59:04,730 - #42 0
INFO  01:59:04,730 - #26 <=
INFO  01:59:04,730 - #43 x
INFO  01:59:04,730 - #27 &&
INFO  01:59:04,730 - #43 x
INFO  01:59:04,730 - #25 <
INFO  01:59:04,730 - #43 size
INFO  01:59:04,730 - #36 )
INFO  01:59:04,730 - #39 {
INFO  01:59:04,730 - #43 val
INFO  01:59:04,730 - #34 .
INFO  01:59:04,730 - #43 putp
INFO  01:59:04,730 - #35 (
INFO  01:59:04,730 - #43 val
INFO  01:59:04,730 - #34 .
INFO  01:59:04,730 - #43 getp
INFO  01:59:04,730 - #35 (
INFO  01:59:04,730 - #43 x
INFO  01:59:04,730 - #36 )
INFO  01:59:04,730 - #16 +
INFO  01:59:04,730 - #42 1
INFO  01:59:04,730 - #36 )
INFO  01:59:04,730 - #32 ;
INFO  01:59:04,730 - #40 }
INFO  01:59:04,730 - #41 else
INFO  01:59:04,730 - #39 {
INFO  01:59:04,730 - #5 if
INFO  01:59:04,730 - #35 (
INFO  01:59:04,730 - #17 -
INFO  01:59:04,730 - #43 size
INFO  01:59:04,730 - #25 <
INFO  01:59:04,730 - #43 x
INFO  01:59:04,730 - #27 &&
INFO  01:59:04,730 - #43 x
INFO  01:59:04,730 - #25 <
INFO  01:59:04,730 - #42 0
INFO  01:59:04,730 - #36 )
INFO  01:59:04,730 - #39 {
INFO  01:59:04,730 - #43 val
INFO  01:59:04,730 - #34 .
INFO  01:59:04,730 - #43 putn
INFO  01:59:04,730 - #35 (
INFO  01:59:04,730 - #43 val
INFO  01:59:04,730 - #34 .
INFO  01:59:04,730 - #43 getn
INFO  01:59:04,730 - #35 (
INFO  01:59:04,730 - #17 -
INFO  01:59:04,730 - #43 x
INFO  01:59:04,730 - #36 )
INFO  01:59:04,730 - #16 +
INFO  01:59:04,730 - #42 1
INFO  01:59:04,730 - #36 )
INFO  01:59:04,730 - #32 ;
INFO  01:59:04,730 - #40 }
INFO  01:59:04,730 - #8 read
INFO  01:59:04,730 - #35 (
INFO  01:59:04,730 - #43 x
INFO  01:59:04,730 - #36 )
INFO  01:59:04,730 - #32 ;
INFO  01:59:04,730 - #40 }
INFO  01:59:04,730 - #40 }
INFO  01:59:04,730 - #12 while
INFO  01:59:04,730 - #35 (
INFO  01:59:04,730 - #44 true
INFO  01:59:04,730 - #36 )
INFO  01:59:04,730 - #32 ;
INFO  01:59:04,730 - #40 }
INFO  01:59:04,730 - #40 }
INFO  01:59:04,949 - Deklarisana konstanta size, objekat u tabeli simbola rs.etf.pp1.symboltable.concepts.Obj@fb509a: linija 2
INFO  01:59:04,949 - Deklarisan niz neg, objekat u tabeli simbola rs.etf.pp1.symboltable.concepts.Obj@ffa5d: linija 4
INFO  01:59:04,949 - Deklarisan niz pos, objekat u tabeli simbola rs.etf.pp1.symboltable.concepts.Obj@117ae12: linija 4
INFO  01:59:04,949 - Obrada funkcije putp, objekat u tabeli simbola rs.etf.pp1.symboltable.concepts.Obj@1405ef7: linija 6
INFO  01:59:04,949 - Deklarisana promenljiva a, objekat u tabeli simbola rs.etf.pp1.symboltable.concepts.Obj@193b845: linija 6
INFO  01:59:04,949 - Deklarisana promenljiva idx, objekat u tabeli simbola rs.etf.pp1.symboltable.concepts.Obj@817b38: linija 6
ERROR 01:59:04,949 - Ime this nije deklarisano: linija 6

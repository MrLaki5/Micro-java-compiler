INFO  11:38:15,510 - Compiling source file: C:\Users\mimar\Desktop\pp1dz_template\workspace\MJCompiler\test\program.obj
INFO  11:38:15,571 - #2 program
INFO  11:38:15,571 - #43 P
INFO  11:38:15,571 - #15 const
INFO  11:38:15,572 - #43 int
INFO  11:38:15,572 - #43 size
INFO  11:38:15,573 - #29 =
INFO  11:38:15,573 - #42 10
INFO  11:38:15,573 - #32 ;
INFO  11:38:15,574 - #4 class
INFO  11:38:15,574 - #43 Table
INFO  11:38:15,575 - #39 {
INFO  11:38:15,575 - #43 int
INFO  11:38:15,576 - #43 pos
INFO  11:38:15,576 - #37 [
INFO  11:38:15,576 - #38 ]
INFO  11:38:15,576 - #33 ,
INFO  11:38:15,580 - #43 neg
INFO  11:38:15,580 - #37 [
INFO  11:38:15,580 - #38 ]
INFO  11:38:15,580 - #32 ;
INFO  11:38:15,581 - #39 {
INFO  11:38:15,583 - #10 void
INFO  11:38:15,586 - #43 putp
INFO  11:38:15,586 - #35 (
INFO  11:38:15,586 - #43 int
INFO  11:38:15,586 - #43 a
INFO  11:38:15,586 - #33 ,
INFO  11:38:15,587 - #43 int
INFO  11:38:15,587 - #43 idx
INFO  11:38:15,587 - #36 )
INFO  11:38:15,587 - #39 {
INFO  11:38:15,588 - #43 this
INFO  11:38:15,590 - #34 .
INFO  11:38:15,590 - #43 pos
INFO  11:38:15,590 - #37 [
INFO  11:38:15,590 - #43 idx
INFO  11:38:15,591 - #38 ]
INFO  11:38:15,591 - #29 =
INFO  11:38:15,591 - #43 a
INFO  11:38:15,591 - #32 ;
INFO  11:38:15,592 - #40 }
INFO  11:38:15,592 - #10 void
INFO  11:38:15,594 - #43 putn
INFO  11:38:15,595 - #35 (
INFO  11:38:15,595 - #43 int
INFO  11:38:15,595 - #43 a
INFO  11:38:15,595 - #33 ,
INFO  11:38:15,596 - #43 int
INFO  11:38:15,596 - #43 idx
INFO  11:38:15,596 - #36 )
INFO  11:38:15,596 - #39 {
INFO  11:38:15,596 - #43 this
INFO  11:38:15,596 - #34 .
INFO  11:38:15,596 - #43 neg
INFO  11:38:15,597 - #37 [
INFO  11:38:15,598 - #43 idx
INFO  11:38:15,599 - #38 ]
INFO  11:38:15,599 - #29 =
INFO  11:38:15,599 - #43 a
INFO  11:38:15,599 - #32 ;
INFO  11:38:15,600 - #40 }
INFO  11:38:15,600 - #43 int
INFO  11:38:15,600 - #43 getp
INFO  11:38:15,600 - #35 (
INFO  11:38:15,600 - #43 int
INFO  11:38:15,600 - #43 idx
INFO  11:38:15,600 - #36 )
INFO  11:38:15,600 - #39 {
INFO  11:38:15,601 - #9 return
INFO  11:38:15,601 - #43 pos
INFO  11:38:15,601 - #37 [
INFO  11:38:15,601 - #43 idx
INFO  11:38:15,601 - #38 ]
INFO  11:38:15,601 - #32 ;
INFO  11:38:15,601 - #40 }
INFO  11:38:15,601 - #43 int
INFO  11:38:15,601 - #43 getn
INFO  11:38:15,601 - #35 (
INFO  11:38:15,601 - #43 int
INFO  11:38:15,601 - #43 idx
INFO  11:38:15,601 - #36 )
INFO  11:38:15,603 - #39 {
INFO  11:38:15,603 - #9 return
INFO  11:38:15,603 - #43 neg
INFO  11:38:15,603 - #37 [
INFO  11:38:15,603 - #43 idx
INFO  11:38:15,603 - #38 ]
INFO  11:38:15,603 - #32 ;
INFO  11:38:15,603 - #40 }
INFO  11:38:15,603 - #40 }
INFO  11:38:15,603 - #40 }
INFO  11:38:15,604 - #43 Table
INFO  11:38:15,605 - #43 val
INFO  11:38:15,605 - #32 ;
INFO  11:38:15,605 - #39 {
INFO  11:38:15,605 - #10 void
INFO  11:38:15,605 - #43 main
INFO  11:38:15,605 - #35 (
INFO  11:38:15,606 - #36 )
INFO  11:38:15,606 - #43 int
INFO  11:38:15,606 - #43 x
INFO  11:38:15,606 - #33 ,
INFO  11:38:15,606 - #43 i
INFO  11:38:15,606 - #32 ;
INFO  11:38:15,607 - #39 {
INFO  11:38:15,607 - #43 val
INFO  11:38:15,607 - #29 =
INFO  11:38:15,608 - #6 new
INFO  11:38:15,608 - #43 Table
INFO  11:38:15,608 - #32 ;
INFO  11:38:15,609 - #43 val
INFO  11:38:15,609 - #34 .
INFO  11:38:15,609 - #43 pos
INFO  11:38:15,609 - #29 =
INFO  11:38:15,609 - #6 new
INFO  11:38:15,609 - #43 int
INFO  11:38:15,610 - #37 [
INFO  11:38:15,610 - #43 size
INFO  11:38:15,610 - #38 ]
INFO  11:38:15,610 - #32 ;
INFO  11:38:15,610 - #43 val
INFO  11:38:15,610 - #34 .
INFO  11:38:15,610 - #43 neg
INFO  11:38:15,611 - #29 =
INFO  11:38:15,611 - #6 new
INFO  11:38:15,612 - #43 int
INFO  11:38:15,612 - #37 [
INFO  11:38:15,612 - #43 size
INFO  11:38:15,612 - #38 ]
INFO  11:38:15,612 - #32 ;
INFO  11:38:15,612 - #43 i
INFO  11:38:15,612 - #29 =
INFO  11:38:15,612 - #42 0
INFO  11:38:15,613 - #32 ;
INFO  11:38:15,613 - #11 do
INFO  11:38:15,613 - #39 {
INFO  11:38:15,614 - #43 val
INFO  11:38:15,614 - #34 .
INFO  11:38:15,614 - #43 putp
INFO  11:38:15,614 - #35 (
INFO  11:38:15,615 - #42 0
INFO  11:38:15,615 - #33 ,
INFO  11:38:15,615 - #43 i
INFO  11:38:15,615 - #36 )
INFO  11:38:15,615 - #32 ;
INFO  11:38:15,615 - #43 val
INFO  11:38:15,618 - #34 .
INFO  11:38:15,618 - #43 putn
INFO  11:38:15,618 - #35 (
INFO  11:38:15,618 - #42 0
INFO  11:38:15,618 - #33 ,
INFO  11:38:15,619 - #43 i
INFO  11:38:15,619 - #36 )
INFO  11:38:15,619 - #32 ;
INFO  11:38:15,619 - #43 i
INFO  11:38:15,620 - #30 ++
INFO  11:38:15,620 - #32 ;
INFO  11:38:15,620 - #40 }
INFO  11:38:15,620 - #12 while
INFO  11:38:15,620 - #35 (
INFO  11:38:15,620 - #43 i
INFO  11:38:15,620 - #25 <
INFO  11:38:15,620 - #43 size
INFO  11:38:15,621 - #36 )
INFO  11:38:15,622 - #32 ;
INFO  11:38:15,622 - #8 read
INFO  11:38:15,622 - #35 (
INFO  11:38:15,622 - #43 x
INFO  11:38:15,622 - #36 )
INFO  11:38:15,622 - #32 ;
INFO  11:38:15,622 - #11 do
INFO  11:38:15,623 - #39 {
INFO  11:38:15,623 - #5 if
INFO  11:38:15,625 - #35 (
INFO  11:38:15,625 - #43 x
INFO  11:38:15,625 - #24 >=
INFO  11:38:15,625 - #43 size
INFO  11:38:15,629 - #36 )
INFO  11:38:15,629 - #3 break
INFO  11:38:15,629 - #32 ;
INFO  11:38:15,629 - #5 if
INFO  11:38:15,630 - #35 (
INFO  11:38:15,630 - #42 0
INFO  11:38:15,630 - #26 <=
INFO  11:38:15,631 - #43 x
INFO  11:38:15,631 - #27 &&
INFO  11:38:15,631 - #43 x
INFO  11:38:15,632 - #25 <
INFO  11:38:15,632 - #43 size
INFO  11:38:15,632 - #36 )
INFO  11:38:15,632 - #39 {
INFO  11:38:15,632 - #43 val
INFO  11:38:15,633 - #34 .
INFO  11:38:15,633 - #43 putp
INFO  11:38:15,633 - #35 (
INFO  11:38:15,633 - #43 val
INFO  11:38:15,633 - #34 .
INFO  11:38:15,633 - #43 getp
INFO  11:38:15,639 - #35 (
INFO  11:38:15,640 - #43 x
INFO  11:38:15,640 - #36 )
INFO  11:38:15,640 - #16 +
INFO  11:38:15,640 - #42 1
INFO  11:38:15,641 - #36 )
INFO  11:38:15,642 - #32 ;
INFO  11:38:15,642 - #40 }
INFO  11:38:15,642 - #41 else
INFO  11:38:15,643 - #5 if
INFO  11:38:15,643 - #35 (
INFO  11:38:15,644 - #43 size
INFO  11:38:15,644 - #25 <
INFO  11:38:15,644 - #43 x
INFO  11:38:15,644 - #27 &&
INFO  11:38:15,645 - #43 x
INFO  11:38:15,645 - #25 <
INFO  11:38:15,645 - #42 0
INFO  11:38:15,645 - #36 )
INFO  11:38:15,645 - #39 {
INFO  11:38:15,645 - #43 val
INFO  11:38:15,645 - #34 .
INFO  11:38:15,645 - #43 putn
INFO  11:38:15,645 - #35 (
INFO  11:38:15,645 - #43 val
INFO  11:38:15,645 - #34 .
INFO  11:38:15,645 - #43 getn
INFO  11:38:15,645 - #35 (
INFO  11:38:15,646 - #17 -
INFO  11:38:15,646 - #43 x
INFO  11:38:15,646 - #36 )
INFO  11:38:15,646 - #16 +
INFO  11:38:15,646 - #42 1
INFO  11:38:15,646 - #36 )
INFO  11:38:15,646 - #32 ;
INFO  11:38:15,646 - #40 }
INFO  11:38:15,646 - #8 read
INFO  11:38:15,647 - #35 (
INFO  11:38:15,647 - #43 x
INFO  11:38:15,647 - #36 )
INFO  11:38:15,647 - #32 ;
INFO  11:38:15,647 - #40 }
INFO  11:38:15,647 - #12 while
INFO  11:38:15,647 - #35 (
INFO  11:38:15,647 - #44 true
INFO  11:38:15,647 - #36 )
INFO  11:38:15,648 - #32 ;
INFO  11:38:15,650 - #40 }
INFO  11:38:15,650 - #40 }

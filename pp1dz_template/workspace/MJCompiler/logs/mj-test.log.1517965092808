INFO  01:57:11,198 - Compiling source file: C:\Users\mimar\Desktop\PP1 PROJEKAT\microjava-program-interpreter\pp1dz_template\workspace\MJCompiler\test\semantikTest2.mj
INFO  01:57:11,245 - #2 program
INFO  01:57:11,245 - #43 P
INFO  01:57:11,245 - #15 const
INFO  01:57:11,245 - #43 int
INFO  01:57:11,245 - #43 size
INFO  01:57:11,245 - #29 =
INFO  01:57:11,245 - #42 10
INFO  01:57:11,245 - #32 ;
INFO  01:57:11,260 - #4 class
INFO  01:57:11,260 - #43 Table
INFO  01:57:11,260 - #39 {
INFO  01:57:11,260 - #43 int
INFO  01:57:11,260 - #43 pos
INFO  01:57:11,260 - #37 [
INFO  01:57:11,260 - #38 ]
INFO  01:57:11,260 - #33 ,
INFO  01:57:11,260 - #43 neg
INFO  01:57:11,260 - #37 [
INFO  01:57:11,260 - #38 ]
INFO  01:57:11,260 - #32 ;
INFO  01:57:11,260 - #39 {
INFO  01:57:11,260 - #10 void
INFO  01:57:11,260 - #43 putp
INFO  01:57:11,260 - #35 (
INFO  01:57:11,260 - #43 int
INFO  01:57:11,260 - #43 a
INFO  01:57:11,260 - #33 ,
INFO  01:57:11,260 - #43 int
INFO  01:57:11,260 - #43 idx
INFO  01:57:11,260 - #36 )
INFO  01:57:11,260 - #39 {
INFO  01:57:11,260 - #43 this
INFO  01:57:11,260 - #34 .
INFO  01:57:11,260 - #43 pos
INFO  01:57:11,260 - #37 [
INFO  01:57:11,260 - #43 idx
INFO  01:57:11,260 - #38 ]
INFO  01:57:11,260 - #29 =
INFO  01:57:11,260 - #43 a
INFO  01:57:11,260 - #32 ;
INFO  01:57:11,260 - #40 }
INFO  01:57:11,260 - #10 void
INFO  01:57:11,260 - #43 putn
INFO  01:57:11,260 - #35 (
INFO  01:57:11,260 - #43 int
INFO  01:57:11,260 - #43 a
INFO  01:57:11,260 - #33 ,
INFO  01:57:11,260 - #43 int
INFO  01:57:11,260 - #43 idx
INFO  01:57:11,260 - #36 )
INFO  01:57:11,260 - #39 {
INFO  01:57:11,260 - #43 this
INFO  01:57:11,260 - #34 .
INFO  01:57:11,260 - #43 neg
INFO  01:57:11,260 - #37 [
INFO  01:57:11,260 - #43 idx
INFO  01:57:11,260 - #38 ]
INFO  01:57:11,260 - #29 =
INFO  01:57:11,260 - #43 a
INFO  01:57:11,260 - #32 ;
INFO  01:57:11,260 - #40 }
INFO  01:57:11,260 - #43 int
INFO  01:57:11,260 - #43 getp
INFO  01:57:11,260 - #35 (
INFO  01:57:11,260 - #43 int
INFO  01:57:11,260 - #43 idx
INFO  01:57:11,260 - #36 )
INFO  01:57:11,260 - #39 {
INFO  01:57:11,260 - #9 return
INFO  01:57:11,260 - #43 pos
INFO  01:57:11,260 - #37 [
INFO  01:57:11,260 - #43 idx
INFO  01:57:11,260 - #38 ]
INFO  01:57:11,260 - #32 ;
INFO  01:57:11,260 - #40 }
INFO  01:57:11,260 - #43 int
INFO  01:57:11,260 - #43 getn
INFO  01:57:11,260 - #35 (
INFO  01:57:11,260 - #43 int
INFO  01:57:11,260 - #43 idx
INFO  01:57:11,260 - #36 )
INFO  01:57:11,260 - #39 {
INFO  01:57:11,260 - #9 return
INFO  01:57:11,260 - #43 neg
INFO  01:57:11,260 - #37 [
INFO  01:57:11,260 - #43 idx
INFO  01:57:11,260 - #38 ]
INFO  01:57:11,260 - #32 ;
INFO  01:57:11,260 - #40 }
INFO  01:57:11,260 - #40 }
INFO  01:57:11,260 - #40 }
INFO  01:57:11,260 - #43 Table
INFO  01:57:11,276 - #43 val
INFO  01:57:11,276 - #32 ;
INFO  01:57:11,276 - #39 {
INFO  01:57:11,276 - #10 void
INFO  01:57:11,276 - #43 main
INFO  01:57:11,276 - #35 (
INFO  01:57:11,276 - #36 )
INFO  01:57:11,276 - #43 int
INFO  01:57:11,276 - #43 x
INFO  01:57:11,276 - #33 ,
INFO  01:57:11,276 - #43 i
INFO  01:57:11,276 - #32 ;
INFO  01:57:11,276 - #39 {
INFO  01:57:11,276 - #43 val
INFO  01:57:11,276 - #29 =
INFO  01:57:11,276 - #6 new
INFO  01:57:11,276 - #43 Table
INFO  01:57:11,276 - #32 ;
INFO  01:57:11,276 - #43 val
INFO  01:57:11,276 - #34 .
INFO  01:57:11,276 - #43 pos
INFO  01:57:11,276 - #29 =
INFO  01:57:11,276 - #6 new
INFO  01:57:11,276 - #43 int
INFO  01:57:11,276 - #37 [
INFO  01:57:11,276 - #43 size
INFO  01:57:11,276 - #38 ]
INFO  01:57:11,276 - #32 ;
INFO  01:57:11,276 - #43 val
INFO  01:57:11,276 - #34 .
INFO  01:57:11,276 - #43 neg
INFO  01:57:11,276 - #29 =
INFO  01:57:11,276 - #6 new
INFO  01:57:11,276 - #43 int
INFO  01:57:11,276 - #37 [
INFO  01:57:11,276 - #43 size
INFO  01:57:11,276 - #38 ]
INFO  01:57:11,276 - #32 ;
INFO  01:57:11,276 - #43 i
INFO  01:57:11,276 - #29 =
INFO  01:57:11,276 - #42 0
INFO  01:57:11,276 - #32 ;
INFO  01:57:11,276 - #11 do
INFO  01:57:11,276 - #39 {
INFO  01:57:11,276 - #43 val
INFO  01:57:11,292 - #34 .
INFO  01:57:11,292 - #43 putp
INFO  01:57:11,292 - #35 (
INFO  01:57:11,292 - #42 0
INFO  01:57:11,292 - #33 ,
INFO  01:57:11,292 - #43 i
INFO  01:57:11,292 - #36 )
INFO  01:57:11,292 - #32 ;
INFO  01:57:11,292 - #43 val
INFO  01:57:11,292 - #34 .
INFO  01:57:11,292 - #43 putn
INFO  01:57:11,292 - #35 (
INFO  01:57:11,292 - #42 0
INFO  01:57:11,292 - #33 ,
INFO  01:57:11,292 - #43 i
INFO  01:57:11,292 - #36 )
INFO  01:57:11,292 - #32 ;
INFO  01:57:11,292 - #43 i
INFO  01:57:11,292 - #30 ++
INFO  01:57:11,292 - #32 ;
INFO  01:57:11,292 - #40 }
INFO  01:57:11,292 - #12 while
INFO  01:57:11,292 - #35 (
INFO  01:57:11,292 - #43 i
INFO  01:57:11,292 - #25 <
INFO  01:57:11,292 - #43 size
INFO  01:57:11,292 - #36 )
INFO  01:57:11,292 - #32 ;
INFO  01:57:11,292 - #8 read
INFO  01:57:11,292 - #35 (
INFO  01:57:11,292 - #43 x
INFO  01:57:11,292 - #36 )
INFO  01:57:11,292 - #32 ;
INFO  01:57:11,292 - #11 do
INFO  01:57:11,292 - #39 {
INFO  01:57:11,292 - #5 if
INFO  01:57:11,292 - #35 (
INFO  01:57:11,292 - #43 x
INFO  01:57:11,292 - #24 >=
INFO  01:57:11,292 - #43 size
INFO  01:57:11,292 - #36 )
INFO  01:57:11,292 - #3 break
INFO  01:57:11,292 - #32 ;
INFO  01:57:11,292 - #5 if
INFO  01:57:11,292 - #35 (
INFO  01:57:11,292 - #42 0
INFO  01:57:11,292 - #26 <=
INFO  01:57:11,292 - #43 x
INFO  01:57:11,292 - #27 &&
INFO  01:57:11,292 - #43 x
INFO  01:57:11,292 - #25 <
INFO  01:57:11,292 - #43 size
INFO  01:57:11,292 - #36 )
INFO  01:57:11,292 - #39 {
INFO  01:57:11,292 - #43 val
INFO  01:57:11,292 - #34 .
INFO  01:57:11,292 - #43 putp
INFO  01:57:11,292 - #35 (
INFO  01:57:11,292 - #43 val
INFO  01:57:11,292 - #34 .
INFO  01:57:11,292 - #43 getp
INFO  01:57:11,292 - #35 (
INFO  01:57:11,292 - #43 x
INFO  01:57:11,292 - #36 )
INFO  01:57:11,292 - #16 +
INFO  01:57:11,292 - #42 1
INFO  01:57:11,292 - #36 )
INFO  01:57:11,292 - #32 ;
INFO  01:57:11,292 - #40 }
INFO  01:57:11,308 - #41 else
INFO  01:57:11,308 - #5 if
INFO  01:57:11,308 - #35 (
INFO  01:57:11,308 - #43 size
INFO  01:57:11,308 - #25 <
INFO  01:57:11,308 - #43 x
INFO  01:57:11,308 - #27 &&
INFO  01:57:11,308 - #43 x
INFO  01:57:11,308 - #25 <
INFO  01:57:11,308 - #42 0
INFO  01:57:11,308 - #36 )
INFO  01:57:11,308 - #39 {
INFO  01:57:11,308 - #43 val
INFO  01:57:11,308 - #34 .
INFO  01:57:11,308 - #43 putn
INFO  01:57:11,308 - #35 (
INFO  01:57:11,308 - #43 val
INFO  01:57:11,308 - #34 .
INFO  01:57:11,308 - #43 getn
INFO  01:57:11,308 - #35 (
INFO  01:57:11,308 - #43 x
INFO  01:57:11,308 - #36 )
INFO  01:57:11,308 - #16 +
INFO  01:57:11,308 - #42 1
INFO  01:57:11,308 - #36 )
INFO  01:57:11,308 - #32 ;
INFO  01:57:11,308 - #40 }
INFO  01:57:11,308 - #8 read
INFO  01:57:11,308 - #35 (
INFO  01:57:11,308 - #43 x
INFO  01:57:11,308 - #36 )
INFO  01:57:11,308 - #32 ;
INFO  01:57:11,308 - #40 }
INFO  01:57:11,308 - #40 }
ERROR 01:57:11,308 - Sintaksna greska na liniji 44
INFO  01:57:11,308 - #12 while
INFO  01:57:11,308 - #35 (
INFO  01:57:11,308 - #44 true
INFO  01:57:11,308 - #36 )
INFO  01:57:11,308 - #32 ;
INFO  01:57:11,308 - #40 }
INFO  01:57:11,308 - #40 }
ERROR 01:57:11,308 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 46

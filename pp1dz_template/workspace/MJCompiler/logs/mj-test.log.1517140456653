INFO  11:39:01,630 - Compiling source file: C:\Users\mimar\Desktop\pp1dz_template\workspace\MJCompiler\test\program.obj
INFO  11:39:01,771 - #2 program
INFO  11:39:01,772 - #43 P
INFO  11:39:01,772 - #15 const
INFO  11:39:01,772 - #43 int
INFO  11:39:01,773 - #43 size
INFO  11:39:01,773 - #29 =
INFO  11:39:01,773 - #42 10
INFO  11:39:01,773 - #32 ;
INFO  11:39:01,773 - #4 class
INFO  11:39:01,775 - #43 Table
INFO  11:39:01,775 - #39 {
INFO  11:39:01,775 - #43 int
INFO  11:39:01,775 - #43 pos
INFO  11:39:01,775 - #37 [
INFO  11:39:01,775 - #38 ]
INFO  11:39:01,777 - #33 ,
INFO  11:39:01,778 - #43 neg
INFO  11:39:01,778 - #37 [
INFO  11:39:01,778 - #38 ]
INFO  11:39:01,778 - #32 ;
INFO  11:39:01,778 - #39 {
INFO  11:39:01,779 - #10 void
INFO  11:39:01,780 - #43 putp
INFO  11:39:01,780 - #35 (
INFO  11:39:01,780 - #43 int
INFO  11:39:01,780 - #43 a
INFO  11:39:01,780 - #33 ,
INFO  11:39:01,781 - #43 int
INFO  11:39:01,782 - #43 idx
INFO  11:39:01,782 - #36 )
INFO  11:39:01,782 - #39 {
INFO  11:39:01,782 - #43 this
INFO  11:39:01,785 - #34 .
INFO  11:39:01,785 - #43 pos
INFO  11:39:01,785 - #37 [
INFO  11:39:01,785 - #43 idx
INFO  11:39:01,786 - #38 ]
INFO  11:39:01,786 - #29 =
INFO  11:39:01,786 - #43 a
INFO  11:39:01,786 - #32 ;
INFO  11:39:01,786 - #40 }
INFO  11:39:01,786 - #10 void
INFO  11:39:01,787 - #43 putn
INFO  11:39:01,787 - #35 (
INFO  11:39:01,787 - #43 int
INFO  11:39:01,788 - #43 a
INFO  11:39:01,788 - #33 ,
INFO  11:39:01,788 - #43 int
INFO  11:39:01,788 - #43 idx
INFO  11:39:01,788 - #36 )
INFO  11:39:01,788 - #39 {
INFO  11:39:01,788 - #43 this
INFO  11:39:01,788 - #34 .
INFO  11:39:01,788 - #43 neg
INFO  11:39:01,788 - #37 [
INFO  11:39:01,788 - #43 idx
INFO  11:39:01,788 - #38 ]
INFO  11:39:01,788 - #29 =
INFO  11:39:01,788 - #43 a
INFO  11:39:01,788 - #32 ;
INFO  11:39:01,788 - #40 }
INFO  11:39:01,788 - #43 int
INFO  11:39:01,788 - #43 getp
INFO  11:39:01,788 - #35 (
INFO  11:39:01,788 - #43 int
INFO  11:39:01,788 - #43 idx
INFO  11:39:01,788 - #36 )
INFO  11:39:01,789 - #39 {
INFO  11:39:01,789 - #9 return
INFO  11:39:01,789 - #43 pos
INFO  11:39:01,789 - #37 [
INFO  11:39:01,789 - #43 idx
INFO  11:39:01,789 - #38 ]
INFO  11:39:01,789 - #32 ;
INFO  11:39:01,789 - #40 }
INFO  11:39:01,789 - #43 int
INFO  11:39:01,789 - #43 getn
INFO  11:39:01,789 - #35 (
INFO  11:39:01,789 - #43 int
INFO  11:39:01,789 - #43 idx
INFO  11:39:01,789 - #36 )
INFO  11:39:01,789 - #39 {
INFO  11:39:01,789 - #9 return
INFO  11:39:01,789 - #43 neg
INFO  11:39:01,789 - #37 [
INFO  11:39:01,789 - #43 idx
INFO  11:39:01,789 - #38 ]
INFO  11:39:01,789 - #32 ;
INFO  11:39:01,789 - #40 }
INFO  11:39:01,789 - #40 }
INFO  11:39:01,790 - #40 }
INFO  11:39:01,790 - #43 Table
INFO  11:39:01,791 - #43 val
INFO  11:39:01,791 - #32 ;
INFO  11:39:01,791 - #39 {
INFO  11:39:01,791 - #10 void
INFO  11:39:01,791 - #43 main
INFO  11:39:01,791 - #35 (
INFO  11:39:01,791 - #36 )
INFO  11:39:01,792 - #43 int
INFO  11:39:01,792 - #43 x
INFO  11:39:01,792 - #33 ,
INFO  11:39:01,792 - #43 i
INFO  11:39:01,792 - #32 ;
INFO  11:39:01,792 - #39 {
INFO  11:39:01,792 - #43 val
INFO  11:39:01,792 - #29 =
INFO  11:39:01,792 - #6 new
INFO  11:39:01,792 - #43 Table
INFO  11:39:01,792 - #32 ;
INFO  11:39:01,793 - #43 val
INFO  11:39:01,793 - #34 .
INFO  11:39:01,793 - #43 pos
INFO  11:39:01,793 - #29 =
INFO  11:39:01,793 - #6 new
INFO  11:39:01,793 - #43 int
INFO  11:39:01,793 - #37 [
INFO  11:39:01,793 - #43 size
INFO  11:39:01,793 - #38 ]
INFO  11:39:01,793 - #32 ;
INFO  11:39:01,793 - #43 val
INFO  11:39:01,793 - #34 .
INFO  11:39:01,793 - #43 neg
INFO  11:39:01,793 - #29 =
INFO  11:39:01,793 - #6 new
INFO  11:39:01,793 - #43 int
INFO  11:39:01,793 - #37 [
INFO  11:39:01,793 - #43 size
INFO  11:39:01,793 - #38 ]
INFO  11:39:01,793 - #32 ;
INFO  11:39:01,793 - #43 i
INFO  11:39:01,794 - #29 =
INFO  11:39:01,794 - #42 0
INFO  11:39:01,794 - #32 ;
INFO  11:39:01,794 - #11 do
INFO  11:39:01,794 - #39 {
INFO  11:39:01,794 - #43 val
INFO  11:39:01,794 - #34 .
INFO  11:39:04,093 - #43 putp
INFO  11:39:04,093 - #35 (
INFO  11:39:04,093 - #42 0
INFO  11:39:04,093 - #33 ,
INFO  11:39:04,094 - #43 i
INFO  11:39:04,094 - #36 )
INFO  11:39:04,094 - #32 ;
INFO  11:39:04,094 - #43 val
INFO  11:39:04,094 - #34 .
INFO  11:39:04,094 - #43 putn
INFO  11:39:04,094 - #35 (
INFO  11:39:04,094 - #42 0
INFO  11:39:04,094 - #33 ,
INFO  11:39:04,094 - #43 i
INFO  11:39:04,094 - #36 )
INFO  11:39:04,094 - #32 ;
INFO  11:39:04,094 - #43 i
INFO  11:39:04,094 - #30 ++
INFO  11:39:04,094 - #32 ;
INFO  11:39:04,095 - #40 }
INFO  11:39:04,095 - #12 while
INFO  11:39:04,095 - #35 (
INFO  11:39:04,095 - #43 i
INFO  11:39:04,095 - #25 <
INFO  11:39:04,095 - #43 size
INFO  11:39:04,096 - #36 )
INFO  11:39:04,096 - #32 ;
INFO  11:39:04,096 - #8 read
INFO  11:39:04,096 - #35 (
INFO  11:39:04,096 - #43 x
INFO  11:39:04,096 - #36 )
INFO  11:39:04,096 - #32 ;
INFO  11:39:04,096 - #11 do
INFO  11:39:04,097 - #39 {
INFO  11:39:04,097 - #5 if
INFO  11:39:04,097 - #35 (
INFO  11:39:04,097 - #43 x
INFO  11:39:04,097 - #24 >=
INFO  11:39:04,097 - #43 size
INFO  11:39:04,100 - #36 )
INFO  11:39:04,100 - #3 break
INFO  11:39:04,100 - #32 ;
INFO  11:39:04,100 - #5 if
INFO  11:39:04,101 - #35 (
INFO  11:39:04,101 - #42 0
INFO  11:39:04,101 - #26 <=
INFO  11:39:04,101 - #43 x
INFO  11:39:04,102 - #27 &&
INFO  11:39:04,102 - #43 x
INFO  11:39:04,102 - #25 <
INFO  11:39:04,102 - #43 size
INFO  11:39:04,102 - #36 )
INFO  11:39:04,102 - #39 {
INFO  11:39:04,102 - #43 val
INFO  11:39:04,102 - #34 .
INFO  11:39:04,102 - #43 putp
INFO  11:39:04,102 - #35 (
INFO  11:39:04,102 - #43 val
INFO  11:39:04,103 - #34 .
INFO  11:39:04,103 - #43 getp
INFO  11:39:04,109 - #35 (
INFO  11:39:04,109 - #43 x
INFO  11:39:04,109 - #36 )
INFO  11:39:04,109 - #16 +
INFO  11:39:04,110 - #42 1
INFO  11:39:04,111 - #36 )
INFO  11:39:04,111 - #32 ;
INFO  11:39:04,111 - #40 }
INFO  11:39:04,111 - #41 else
INFO  11:39:04,111 - #5 if
INFO  11:39:04,111 - #35 (
INFO  11:39:04,111 - #17 -
INFO  11:39:04,111 - #43 size
INFO  11:39:04,111 - #25 <
INFO  11:39:04,111 - #43 x
INFO  11:39:04,111 - #27 &&
INFO  11:39:04,112 - #43 x
INFO  11:39:04,112 - #25 <
INFO  11:39:04,112 - #42 0
INFO  11:39:04,112 - #36 )
INFO  11:39:04,112 - #39 {
INFO  11:39:04,112 - #43 val
INFO  11:39:04,112 - #34 .
INFO  11:39:04,112 - #43 putn
INFO  11:39:04,112 - #35 (
INFO  11:39:04,112 - #43 val
INFO  11:39:04,112 - #34 .
INFO  11:39:04,112 - #43 getn
INFO  11:39:04,112 - #35 (
INFO  11:39:04,112 - #17 -
INFO  11:39:04,112 - #43 x
INFO  11:39:04,112 - #36 )
INFO  11:39:04,112 - #16 +
INFO  11:39:04,112 - #42 1
INFO  11:39:04,112 - #36 )
INFO  11:39:04,112 - #32 ;
INFO  11:39:04,112 - #40 }
INFO  11:39:04,113 - #8 read
INFO  11:39:04,113 - #35 (
INFO  11:39:04,113 - #43 x
INFO  11:39:04,113 - #36 )
INFO  11:39:04,113 - #32 ;
INFO  11:39:04,113 - #40 }
INFO  11:39:04,113 - #12 while
INFO  11:39:04,113 - #35 (
INFO  11:39:04,113 - #44 true
INFO  11:39:04,113 - #36 )
INFO  11:39:04,113 - #32 ;
INFO  11:39:04,113 - #40 }
INFO  11:39:04,113 - #40 }
